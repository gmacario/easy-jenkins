# easy-jenkins docker-compose.yml
#
# See also:
# - Compose file reference: https://docs.docker.com/compose/compose-file/

version: '3.3'

services:
  myjenkins:
    # image: jenkins:latest
    build: myjenkins
    environment:
      - CASC_JENKINS_CONFIG
      # - CASC_JENKINS_CONFIG:${CASC_JENKINS_CONFIG}
      # - CASC_JENKINS_CONFIG:/var/jenkins_home/casc_configs/default.yaml
      # - CASC_JENKINS_CONFIG:/var/jenkins_home/casc_configs
    ports:
      - "9080:8080"
      - "51000:50000"
    # tty: true
    # privileged: true
    network_mode: "bridge"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - "${PWD}/casc_configs:/var/jenkins_home/casc_configs:ro"
    secrets:
      - github             # Github username with password as an example
      - adminpw            # Initial administrator user password
      - agent_private_key  # SSH private key for connecting ssh slaves

  # build-yocto-slave:
  #   image: gmacario/build-yocto:latest
  #   user: jenkins
  #   entrypoint: ""
  #   command: "java -jar /usr/share/jenkins/slave.jar -jnlpUrl http://master:8080/computer/build-yocto-slave/slave-agent.jnlp"
  #   links:
  #     - myjenkins:master
  #   volumes:
  #     - data:/home/jenkins

  nexus:
    image: sonatype/nexus3:latest
    ports:
      - "9081:8081"
    network_mode: "bridge"

# Be careful with newlines in your secrets, make sure to remove them
# before running docker-compose up.
secrets:
  github:
    file: /var/deploy/secrets/github
  adminpw:
    file: /var/deploy/secrets/adminpw
  agent_private_key:
    # This should point to the private key you want your jenkins master to use
    # when connecting to slaves. For example in AWS this would be your .pem file
    file: ~/.ssh/id_rsa

volumes:
  jenkins_home:
#   data:
#   downloads:
#   sstate-cache:

# EOF
